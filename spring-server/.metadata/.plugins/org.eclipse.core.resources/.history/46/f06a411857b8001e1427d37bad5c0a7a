package com.penpick.kakao.controller;

import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.penpick.kakao.dto.KakaoLoginData;

@RestController
@RequestMapping("/api")
public class KakaoLoginController {

	// UserRepository는 Spring Data JPA에서 사용자 정보를 다루기 위한 인터페이스입니다.
    private final UserRepository userRepository;

    @Autowired
    public KakaoLoginController(UserRepository userRepository) {
        this.userRepository = userRepository;
    }

    @PostMapping("/kakao-login")
    public ResponseEntity<String> handleKakaoLogin(@RequestBody KakaoLoginData kakaoLoginData) {
        // 여기서 Kakao 로그인 정보를 처리하고 필요한 작업을 수행합니다.
        // 예를 들어, 사용자 정보를 데이터베이스에 저장하는 예시:

        User user = new User();
        user.setAccessToken(kakaoLoginData.getAccessToken());
        user.setProfile(kakaoLoginData.getProfile());

        userRepository.save(user);

        System.out.println("Received Kakao Login Data and saved to the database: " + kakaoLoginData.toString());
        return ResponseEntity.ok("Kakao login data received and saved successfully!");
    }
}
