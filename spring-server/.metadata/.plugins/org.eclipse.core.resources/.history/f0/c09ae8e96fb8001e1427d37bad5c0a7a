package com.penpick.kakao.controller;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.penpick.kakao.dto.KakaoLoginDTO;
import com.penpick.kakao.model.KakaoUser;
import com.penpick.kakao.repository.KakaoUserRepository;

import jakarta.servlet.http.HttpServletRequest;
import jakarta.servlet.http.HttpSession;

@RestController
@CrossOrigin(origins = "http://localhost:3000", allowCredentials = "true")
@RequestMapping("/api")
public class KakaoLoginController {

	// UserRepository는 Spring Data JPA에서 사용자 정보를 다루기 위한 인터페이스
    private final KakaoUserRepository userRepository;

    @Autowired
    public KakaoLoginController(KakaoUserRepository userRepository) {
        this.userRepository = userRepository;
    }

    @PostMapping("/kakao-login")
    public ResponseEntity<String> handleKakaoLogin(@RequestBody KakaoLoginDTO kakaoLoginDTO,
    												HttpServletRequest request) {
    	
    	// 클라이언트에서 전송한 데이터를 받아와서 처리
        String accessToken = kakaoLoginDTO.getAccessToken();
        String email = kakaoLoginDTO.getEmail();
        String nickname = kakaoLoginDTO.getNickname();

        // Kakao 로그인 정보 DB에 저장
        KakaoUser user = new KakaoUser();
        user.setAccessToken(accessToken);
        user.setEmail(email);
        user.setNickname(nickname);
        
        userRepository.save(user);
        
        //세션에 사용자 정보 저장
        HttpSession session = request.getSession();

        System.out.println("Received Kakao Login Data and saved to the database: " + kakaoLoginDTO.toString());
        return ResponseEntity.ok("Kakao login data received and saved successfully!");
    }
}
